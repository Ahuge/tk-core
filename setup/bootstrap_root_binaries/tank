#!/usr/bin/env bash
# Copyright (c) 2013 Shotgun Software Inc.
# 
# CONFIDENTIAL AND PROPRIETARY
# 
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit 
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your 
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights 
# not expressly granted therein are reserved by Shotgun Software Inc.


# First, compute the location of this pipeline configuration.
# 

SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH=$SELF_PATH/$(basename -- "$0")

# chop off the file name
SELF_PATH=$(dirname "$SELF_PATH")

# Then, find the location of the core we want to use. It is located inside the core_location.cfg,
# which points somewhere inside the bundle cache.
core_location_file="$SELF_PATH/cache/core_location.cfg"

if [ ! -f "$core_location_file" ];
then
    echo "Cannot find core location file $core_location_file!"
    exit 1
fi

# Read the content of the core location file.
core_location=`cat "$core_location_file"`

# We know where the core is, so now we'll add it to the PYTHONPATH.
export PYTHONPATH="$core_location/python":${PYTHONPATH}

# Next, we need to find the Python interpreter file we need to read to invoke Python.
uname_os_str=`uname`

if [[ "$uname_os_str" == MINGW64_NT* ]] || [[ "$uname_os_str" == MINGW32_NT* ]];
then
  curr_platform="Windows"
  # see http://stackoverflow.com/questions/12015348/msys-path-conversion-or-cygpath-for-msys/12063651#12063651
  core_location=`sh -c "(cd $core_location 2</dev/null && pwd -W) || echo $1 | sed 's/\\//\\\\/g;s/^\\\\\([a-z]\)\\\\/\\1:\\\\/'"`
elif [[ "$uname_os_str" ==  CYGWIN_NT* ]];
then
  curr_platform="Windows"
  core_install_root="$( cygpath -lw $core_location )"
else
    curr_platform=`uname`
fi


# Make sure the python interpreter file exists.
interpreter_config_file="$SELF_PATH/config/core/interpreter_${curr_platform}.cfg"

if [ ! -f "$interpreter_config_file" ];
then
    echo "Cannot find interpreter configuration file $interpreter_config_file!"
    exit 1
fi

# now get path to python interpreter by reading config file
interpreter=`cat "$interpreter_config_file"`

# Convert windows interpreter paths to forward-slash
if [[ "$uname_os_str" == CYGWIN_NT* ]];
then
    interpreter=$( cygpath -u $interpreter )
fi

# Expand environment variables
interpreter=`eval echo $interpreter`

# and check that it exists...
if [ ! -f "$interpreter" ];
then
    echo "Cannot find interpreter $interpreter defined in config file $interpreter_config_file!"
    exit 1
fi

export TANK_CURRENT_PC=$SELF_PATH

# execute the python script which does the actual work
exec $interpreter "$core_location/scripts/tank_cmd.py" "$SELF_PATH" "$@"